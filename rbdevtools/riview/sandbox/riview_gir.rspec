
load "riview_gir.rb" ## the library to test

describe DataProxy do
  let!(:sample_data) {
    "DataProxy test 0x" + described_class.object_id.to_s(16)
  }
  ## FIXME unref example at end of test
  subject  {
    described_class.new(sample_data)
  }

  it "registers type" do
    expect(described_class.registered?).to_not be nil
  end

  it "stores a pointer address as registered type" do
    expect(described_class.registered?.is_a?(Integer)).to_not be false
  end

  it "has an object_class for instances" do
    expect(subject.object_class).to_not be nil
  end

  it "has a registered pointer address matching the object_class of instances" do
    oc = subject.object_class
    gtypc = oc.g_type_class
    expect(gtypc.g_type).to be == described_class.registered?
  end
end

=begin TBD <extwidget>.object_class in gir_ffi-gtk3

$DBG_WINDOW.object_class.eql?(RIViewWindow.object_class)
=> true

$DBG_WINDOW.object_class.g_type_class.g_type == RIViewWindow.registered?
==> true

So what about the template handling now

----

RIViewWindow.object_class.g_type_class.g_type
=> 94085460260528

RIViewWindow.ancestors.find { |typ| typ == Gtk::ApplicationWindow}
=> Gtk::ApplicationWindow

Gtk::ApplicationWindow.object_class.g_type_class.g_type
=> 94085459731968

! It uses GIR for the object_class call

Gtk::TemplateBuilder.g_type
...
/home/u1000/.local/share/gem/ruby/3.0.0/gems/gir_ffi-0.15.9/lib/gir_ffi/builders/module_builder.rb:48:in `find_namespaced_class_info': Class TemplateBuilder not found in namespace Gtk (NameError)
	from /home/gimbal/.local/share/gem/ruby/3.0.0/gems/gir_ffi-0.15.9/lib/gir_ffi/builders/module_builder.rb:39:in `build_namespaced_class'
	from /home/gimbal/.local/share/gem/ruby/3.0.0/gems/gir_ffi-0.15.9/lib/gir_ffi/module_base.rb:26:in `load_class'
	from /home/gimbal/.local/share/gem/ruby/3.0.0/gems/gir_ffi-0.15.9/lib/gir_ffi/module_base.rb:22:in `const_missing'
	from (irb):18:in `<main>'
	from -e:1:in `<main>'

=end
